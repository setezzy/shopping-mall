<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.shop.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.zzy.shop.po.Order">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="onumber" jdbcType="BIGINT" property="onumber" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="ostate" jdbcType="INTEGER" property="ostate" />
    <result column="odate" jdbcType="TIMESTAMP" property="odate" />
    <result column="oupdate" jdbcType="TIMESTAMP" property="oupdate" />
    <result column="oprice" jdbcType="DECIMAL" property="oprice" />
    <result column="itemamount" jdbcType="INTEGER" property="itemamount" />
  </resultMap>

  <resultMap id="OrderVOResultMap" type="com.zzy.shop.vo.OrderVO">
    <id column="oid1" jdbcType="INTEGER" property="oid" />
    <result column="onumber" jdbcType="BIGINT" property="onumber" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="ostate1" jdbcType="INTEGER" property="ostate" />
    <result column="odate1" jdbcType="TIMESTAMP" property="odate" />
    <result column="oupdate1" jdbcType="TIMESTAMP" property="oupdate" />
    <result column="oprice" jdbcType="DECIMAL" property="oprice" />
    <result column="itemamount" jdbcType="INTEGER" property="itemamount" />
    <association property="orderShipment" javaType="com.zzy.shop.po.OrderShipment">
      <id column="oshid" jdbcType="INTEGER" property="oshid" />
      <result column="oid4" jdbcType="INTEGER" property="oid" />
      <result column="uname4" jdbcType="INTEGER" property="uname" />
      <result column="phone4" jdbcType="VARCHAR" property="phone" />
      <result column="address4" jdbcType="VARCHAR" property="address" />
    </association>
    <collection property="orderProducts" ofType="com.zzy.shop.po.OrderProduct">
      <id column="opid" jdbcType="INTEGER" property="opid" />
      <result column="oid2" jdbcType="INTEGER" property="oid" />
      <result column="pname" jdbcType="VARCHAR" property="pname" />
      <result column="image" jdbcType="VARCHAR" property="image" />
      <result column="price" jdbcType="DECIMAL" property="price" />
      <result column="pnumber" jdbcType="INTEGER" property="pnumber" />
    </collection>
    <collection property="orderStates" ofType="com.zzy.shop.po.OrderState">
      <id column="osid" jdbcType="INTEGER" property="osid" />
      <result column="oid3" jdbcType="INTEGER" property="oid" />
      <result column="ostate3" jdbcType="INTEGER" property="ostate" />
      <result column="operate" jdbcType="INTEGER" property="operate" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    oid, onumber, uid, ostate, odate, oupdate, oprice, itemamount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderNumber" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders
    where onumber = #{onumber, jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzy.shop.po.Order">
    insert into orders (oid, onumber, uid, ostate, odate, oupdate, oprice, itemamount)
    values (#{oid,jdbcType=INTEGER}, #{onumber,jdbcType=BIGINT}, #{uid,jdbcType=INTEGER},
      #{ostate,jdbcType=INTEGER}, #{odate,jdbcType=TIMESTAMP}, #{oupdate,jdbcType=TIMESTAMP}, 
      #{oprice,jdbcType=DECIMAL}, #{itemamount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzy.shop.po.Order">
    <selectKey keyProperty="oid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="onumber != null">
        onumber,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="ostate != null">
        ostate,
      </if>
      <if test="odate != null">
        odate,
      </if>
      <if test="oupdate != null">
        oupdate,
      </if>
      <if test="oprice != null">
        oprice,
      </if>
      <if test="itemamount != null">
        itemamount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="onumber != null">
        #{onumber,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="ostate != null">
        #{ostate,jdbcType=INTEGER},
      </if>
      <if test="odate != null">
        #{odate,jdbcType=TIMESTAMP},
      </if>
      <if test="oupdate != null">
        #{oupdate,jdbcType=TIMESTAMP},
      </if>
      <if test="oprice != null">
        #{oprice,jdbcType=DECIMAL},
      </if>
      <if test="itemamount != null">
        #{itemamount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzy.shop.po.Order">
    update orders
    <set>
      <if test="onumber != null">
        onumber = #{onumber,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="ostate != null">
        ostate = #{ostate,jdbcType=INTEGER},
      </if>
      <if test="odate != null">
        odate = #{odate,jdbcType=TIMESTAMP},
      </if>
      <if test="oupdate != null">
        oupdate = #{oupdate,jdbcType=TIMESTAMP},
      </if>
      <if test="oprice != null">
        oprice = #{oprice,jdbcType=DECIMAL},
      </if>
      <if test="itemamount != null">
        itemamount = #{itemamount,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzy.shop.po.Order">
    update orders
    set onumber = #{onumber,jdbcType=BIGINT},
      uid = #{uid,jdbcType=INTEGER},
      ostate = #{ostate,jdbcType=INTEGER},
      odate = #{odate,jdbcType=TIMESTAMP},
      oupdate = #{oupdate,jdbcType=TIMESTAMP},
      oprice = #{oprice,jdbcType=DECIMAL},
      itemamount = #{itemamount,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" parameterType="com.zzy.shop.vo.OrderVO" resultMap="OrderVOResultMap">
    select
    oo.oid as oid1, onumber, uid, oo.ostate as ostate1, oo.odate as odate1, oo.oupdate as oupdate1, itemamount,
    oprice, opid, oop.oid as oid2, pnumber, pname, image, price,
    osid, oos.oid as oid3, oos.ostate as ostate3, operate
    FROM
        orders oo,
        order_product oop,
        order_state oos
    WHERE
        oo.oid = oos.oid
    AND oop.oid = oo.oid
    AND oo.uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="selectByOrderState" parameterType="com.zzy.shop.vo.OrderVO" resultMap="OrderVOResultMap">
    select
    oo.oid as oid1, onumber, uid, oo.ostate as ostate1, oo.odate as odate1, oo.oupdate as oupdate1, itemamount, oprice,
    opid, oop.oid as oid2, pnumber, pname, image, price,
    osid, oos.oid as oid3, oos.ostate as ostate3, operate
    from
      orders oo,
      order_product oop,
      order_state oos
    where
      oo.oid = oos.oid
    and oop.oid = oo.oid
    and oo.ostate = #{ostate, jdbcType=INTEGER}
    and oo.uid = #{uid, jdbcType=INTEGER}
  </select>

  <select id="selectOrderVOByOrderNumber" parameterType="java.lang.Long" resultMap="OrderVOResultMap">
    select
    oo.oid as oid1, onumber, uid, oo.ostate as ostate1, oo.odate as odate1, oo.oupdate as oupdate1, itemamount,
    oprice, opid, oop.oid as oid2, pnumber, pname, image, price,
    osid, oos.oid as oid3, oos.ostate as ostate3, operate,
    oshid, oosh.oid as oid4, uname as uname4,
    phone as phone4, address as address4
    FROM
    orders oo,
    order_product oop,
    order_state oos,
    order_shipment oosh
    WHERE
    oo.oid = oos.oid
    AND oop.oid = oo.oid
    AND oo.oid = oosh.oid
    AND oo.onumber = #{onumber,jdbcType=BIGINT}
  </select>

</mapper>